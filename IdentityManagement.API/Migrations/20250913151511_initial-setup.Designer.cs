// <auto-generated />
using System;
using IdentityManagement.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IdentityManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250913151511_initial-setup")]
    partial class initialsetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IdentityManagement.API.Core.Models.Lga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Lgas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Shomolu",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Makoko",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gwagwalada",
                            StateId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wuse",
                            StateId = 2
                        });
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tester"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Abuja"
                        });
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPhoneNumberVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LgaId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LgaId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Joe",
                            IsPhoneNumberVerified = false,
                            LastName = "Bob",
                            LgaId = 1,
                            PasswordHash = "X03MO1qnZdYdgyfeuILPmQ==",
                            PhoneNumber = "08188198932",
                            SecurityStamp = "53bed3d7-4290-404f-bb7d-1ecc9ad99b45",
                            Username = "jbob@test.com"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sam",
                            IsPhoneNumberVerified = false,
                            LastName = "Tom",
                            LgaId = 2,
                            PasswordHash = "X03MO1qnZdYdgyfeuILPmQ==",
                            PhoneNumber = "08033083101",
                            SecurityStamp = "53bed3d7-4290-404f-bb7d-1ecc9ad99b46",
                            Username = "stom@test.com"
                        });
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.Lga", b =>
                {
                    b.HasOne("IdentityManagement.API.Core.Models.State", "State")
                        .WithMany("Lgas")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.User", b =>
                {
                    b.HasOne("IdentityManagement.API.Core.Models.Lga", "Lga")
                        .WithMany()
                        .HasForeignKey("LgaId");

                    b.Navigation("Lga");
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.UserRole", b =>
                {
                    b.HasOne("IdentityManagement.API.Core.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityManagement.API.Core.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.State", b =>
                {
                    b.Navigation("Lgas");
                });

            modelBuilder.Entity("IdentityManagement.API.Core.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
